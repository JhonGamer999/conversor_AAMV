/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Conexion.Conexion;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author johnm
 */
public class VtnVisClients extends javax.swing.JFrame {
    
    private VtnClients clientes;
    
    //Variables globales para filtro de clases
    boolean classSPSus;
    boolean classFrecuent;
    boolean classRecurrent;
    boolean classOcSemester;
    boolean classOcAnual;
    boolean classNoMark;
    boolean classBadExp;
    boolean classNoCover;
    boolean classInactive;
    
    String  telefonoAntCli;
    
    public VtnVisClients() {
        initComponents();
        this.setLocation(50, 30);
        this.setResizable(false);
        
        //Carga de las ordenes de base de datos a la tabla de visualizacion
        CargarDatosTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        btnRegresar = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        btnVerOrden = new javax.swing.JButton();
        btnEliminarOrden = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnAdicionarOrden = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btnLimpiarCampos = new javax.swing.JButton();
        cmpBusqueda = new javax.swing.JTextField();
        btnBuscarOrden = new javax.swing.JButton();
        comboBusqueda = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cmpCliente = new javax.swing.JTextField();
        cmpTel = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cmpDir = new javax.swing.JTextField();
        cmpDir2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cmpCiudad = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        cmpCodPostal = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        cmpId = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        cmpClase = new javax.swing.JComboBox<>();
        cmpCodPostal1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        cmpSPCode = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btnFilter = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        checkSPSus = new javax.swing.JCheckBox();
        checkFrequent = new javax.swing.JCheckBox();
        checkRecurrent = new javax.swing.JCheckBox();
        checkOcSemester = new javax.swing.JCheckBox();
        checkOcAnual = new javax.swing.JCheckBox();
        checkInactive = new javax.swing.JCheckBox();
        checkNoMark = new javax.swing.JCheckBox();
        checkBadExp = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        checkNoCover = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CLIENTS");

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "SP", "Phone", "Client", "Address", "Address2", "PostalCode", "Class"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClientesMouseClicked(evt);
            }
        });
        tablaClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaClientesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaClientes);

        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/flecha.png"))); // NOI18N
        btnRegresar.setBorder(null);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        btnVerOrden.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/lapiz_icon.png"))); // NOI18N
        btnVerOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerOrdenActionPerformed(evt);
            }
        });

        btnEliminarOrden.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/papelera.png"))); // NOI18N
        btnEliminarOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarOrdenActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Delete");

        jLabel5.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Update");

        btnAdicionarOrden.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/masIcon.png"))); // NOI18N
        btnAdicionarOrden.setPreferredSize(new java.awt.Dimension(67, 50));
        btnAdicionarOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarOrdenActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Add");

        jLabel15.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Clean");

        btnLimpiarCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/limpiar_icon.png"))); // NOI18N
        btnLimpiarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnAdicionarOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnVerOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEliminarOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLimpiarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnLimpiarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminarOrden, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdicionarOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnVerOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cmpBusqueda.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpBusquedaKeyPressed(evt);
            }
        });

        btnBuscarOrden.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/lupa.png"))); // NOI18N
        btnBuscarOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarOrdenActionPerformed(evt);
            }
        });
        btnBuscarOrden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBuscarOrdenKeyPressed(evt);
            }
        });

        comboBusqueda.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        comboBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SP Code", "Phone number", "Client name", "City", "Address", "Address2" }));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jLabel7.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Client name");

        cmpCliente.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpClienteKeyPressed(evt);
            }
        });

        cmpTel.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpTel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpTelKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Phone number");

        jLabel9.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Address");

        cmpDir.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmpDirActionPerformed(evt);
            }
        });
        cmpDir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpDirKeyPressed(evt);
            }
        });

        cmpDir2.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpDir2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmpDir2ActionPerformed(evt);
            }
        });
        cmpDir2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpDir2KeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Address 2");

        cmpCiudad.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpCiudad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmpCiudadActionPerformed(evt);
            }
        });
        cmpCiudad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpCiudadKeyPressed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("City");

        cmpCodPostal.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpCodPostal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmpCodPostalActionPerformed(evt);
            }
        });
        cmpCodPostal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpCodPostalKeyPressed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Postal code");

        cmpId.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpId.setEnabled(false);
        cmpId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmpIdActionPerformed(evt);
            }
        });
        cmpId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpIdKeyPressed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Id");

        cmpClase.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Shopify Subscriber", "Frecuent", "Recurrent", "Occasional (Semester)", "Occasional (Yearly)", "No Marketing", "Bad Experience", "No Coverage", "Inactive", "" }));

        cmpCodPostal1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpCodPostal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmpCodPostal1ActionPerformed(evt);
            }
        });
        cmpCodPostal1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpCodPostal1KeyPressed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Interval");

        jLabel19.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("SP Code");

        cmpSPCode.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpSPCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmpSPCodeActionPerformed(evt);
            }
        });
        cmpSPCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpSPCodeKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cmpClase, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(cmpCodPostal1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(67, 67, 67))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(cmpDir, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(cmpDir2)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(cmpTel, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addComponent(cmpCiudad, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel17)
                                            .addComponent(cmpCodPostal, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(9, 9, 9))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(cmpCliente)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel20)
                                    .addComponent(cmpId, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(cmpSPCode, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(65, 65, 65)))
                        .addGap(17, 17, 17))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmpCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmpId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmpTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmpSPCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmpDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmpDir2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmpCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmpCodPostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmpCodPostal1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmpClase, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        btnFilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/filtro_icon.png"))); // NOI18N
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("Filters");

        checkSPSus.setText("Shopify subscriber");

        checkFrequent.setText("Frequent");

        checkRecurrent.setText("Recurrent");

        checkOcSemester.setText("Occasional (Semester)");

        checkOcAnual.setText("Occasional (Yearly)");

        checkInactive.setText("Inactive");

        checkNoMark.setText("No Marketing");

        checkBadExp.setText("Bad experience");

        jLabel12.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Apply filter");

        checkNoCover.setText("No Coverage");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkSPSus)
                            .addComponent(checkFrequent)
                            .addComponent(checkRecurrent))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkOcSemester)
                            .addComponent(checkOcAnual)
                            .addComponent(checkNoMark))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkInactive)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(checkBadExp)
                            .addComponent(checkNoCover))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkSPSus)
                    .addComponent(checkOcSemester)
                    .addComponent(checkBadExp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkFrequent)
                    .addComponent(checkOcAnual)
                    .addComponent(checkInactive))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(checkNoMark)
                        .addComponent(checkNoCover))
                    .addComponent(checkRecurrent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(comboBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmpBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscarOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(405, 405, 405)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 1178, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarOrden, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmpBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addGap(35, 35, 35))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(64, 64, 64)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(556, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        clientes = new VtnClients();
        irA(clientes);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnAdicionarOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarOrdenActionPerformed
        AdicionarDatosTabla();
        CargarDatosTabla();
        limpiarDatos();
    }//GEN-LAST:event_btnAdicionarOrdenActionPerformed

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        //Filtro sobre la tabla modelo
        classSPSus = false;
        classFrecuent = false;
        classRecurrent = false;
        classOcSemester = false;
        classOcAnual = false;
        classNoMark = false;
        classBadExp = false;
        classNoCover = false;
        classInactive = false;
        
        if ( checkSPSus.isSelected() ) 
            classSPSus = true;
        
        if ( checkFrequent.isSelected() ) 
            classFrecuent = true;
        
        if ( checkRecurrent.isSelected() ) 
            classRecurrent = true;
        
        if ( checkOcSemester.isSelected() ) 
            classOcSemester = true;
        
        if ( checkOcAnual.isSelected() ) 
            classOcAnual = true;
        
        if ( checkNoMark.isSelected() ) 
            classNoMark = true;
        
        if ( checkBadExp.isSelected() ) 
            classBadExp = true;
        
        if ( checkNoCover.isSelected() ) 
            classNoCover = true;
        
        if ( checkInactive.isSelected() ) 
            classInactive = true;
        
        //Refresca los registros de la tabla por filtro de clase
        CargarDatosTabla();
    }//GEN-LAST:event_btnFilterActionPerformed

    private void btnBuscarOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarOrdenActionPerformed
        CargarDatosTabla();
    }//GEN-LAST:event_btnBuscarOrdenActionPerformed

    private void btnBuscarOrdenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBuscarOrdenKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarOrdenKeyPressed

    private void cmpBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpBusquedaKeyPressed
        
        if(evt.getKeyCode() == evt.VK_ENTER) {
            CargarDatosTabla();
        }
    }//GEN-LAST:event_cmpBusquedaKeyPressed

    private void tablaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClientesMouseClicked
        //Evento al presionar doble click sobre registro de la tabla
        SeleccionarDatosTabla();
        
    }//GEN-LAST:event_tablaClientesMouseClicked

    private void btnLimpiarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarCamposActionPerformed
        limpiarDatos();
    }//GEN-LAST:event_btnLimpiarCamposActionPerformed

    private void btnVerOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerOrdenActionPerformed
        //Modifica el registro en base de datos
        ModificarDatosTabla();
        CargarDatosTabla();
    }//GEN-LAST:event_btnVerOrdenActionPerformed

    private void btnEliminarOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarOrdenActionPerformed
        //Elimina el registro seleccionado de la base de datos
        EliminarDatosTabla();
        CargarDatosTabla();
        limpiarDatos();
    }//GEN-LAST:event_btnEliminarOrdenActionPerformed

    private void cmpIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpIdKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpIdKeyPressed

    private void cmpIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmpIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpIdActionPerformed

    private void cmpCodPostalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpCodPostalKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpCodPostalKeyPressed

    private void cmpCodPostalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmpCodPostalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpCodPostalActionPerformed

    private void cmpCiudadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpCiudadKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpCiudadKeyPressed

    private void cmpCiudadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmpCiudadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpCiudadActionPerformed

    private void cmpDir2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpDir2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpDir2KeyPressed

    private void cmpDir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmpDir2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpDir2ActionPerformed

    private void cmpDirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpDirKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpDirKeyPressed

    private void cmpDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmpDirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpDirActionPerformed

    private void cmpTelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpTelKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpTelKeyPressed

    private void cmpClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpClienteKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpClienteKeyPressed

    private void cmpCodPostal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmpCodPostal1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpCodPostal1ActionPerformed

    private void cmpCodPostal1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpCodPostal1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpCodPostal1KeyPressed

    private void cmpSPCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmpSPCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpSPCodeActionPerformed

    private void cmpSPCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpSPCodeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpSPCodeKeyPressed

    private void tablaClientesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaClientesKeyPressed
        int keyCode = evt.getKeyCode();
        
        switch( keyCode ) { 
            case KeyEvent.VK_UP:
                SeleccionarDatosTabla(); 
                break;
            case KeyEvent.VK_DOWN:
                SeleccionarDatosTabla();
                break;
        }
    }//GEN-LAST:event_tablaClientesKeyPressed
    
    public void irA(JFrame ventana){
        this.dispose();
        ventana.setVisible(true);
    }
    
    public void CargarDatosTabla(){
        
        DefaultTableModel tablaModelo = new DefaultTableModel();
        Statement prepStat = null;
        ResultSet resSet = null;
        ResultSetMetaData rsMd = null;
        Conexion cnx = new Conexion();
        Connection con;
        String sql = "";
        int contClass = 0;
        
        //Variables utilizadas para la busqueda 
        String itemSeleccionado = (String)comboBusqueda.getSelectedItem();
        String cmpBuscar = cmpBusqueda.getText();
        String where = "";
            
        //Si la variable del campo de busqueda no esta vacia
        if ( !"".equals(cmpBuscar) )
        {
            //Segun el campo seleccionado en el combo hace ciertas busquedas:
            //Cuando es telefono lo busca con exactitud ya que es llave primaria
            if ( itemSeleccionado.equalsIgnoreCase("phone number") )
            {
                where = "WHERE shippingPhone = '"+cmpBuscar+"'";
                contClass++;
            }//Si es cliente busca el patron indicado al inicio de la cadena (patron%)
            else if ( itemSeleccionado.equalsIgnoreCase("client name") )
            {
                where = "WHERE name LIKE '"+cmpBuscar+"%'";
                contClass++;
            }
            else if ( itemSeleccionado.equalsIgnoreCase("address") )
            {
                where = "WHERE address LIKE '"+cmpBuscar+"%'";
                contClass++;
            }
            else if ( itemSeleccionado.equalsIgnoreCase("address2") )
            {
                where = "WHERE address2 LIKE '"+cmpBuscar+"%'";
                contClass++;
            }
            else if ( itemSeleccionado.equalsIgnoreCase("city") )
            {
                where = "WHERE city LIKE '"+cmpBuscar+"%'";
                contClass++;
            }
            else if ( itemSeleccionado.equalsIgnoreCase("sp code") )
            {
                where = "WHERE shopifyCode LIKE '"+cmpBuscar+"%'";
                contClass++;
            }
        }
        
        //Si se marcaron clases y se esta realizando filtro
        if ( classSPSus )
        { 
            if ( contClass == 0 )
                where += "WHERE";
            else
                where += "OR";
                
            where += " class = 'Shopify Subscriber' ";
            contClass++;
        }
        
        if ( classFrecuent )
        {
            if ( contClass == 0 )
                where += "WHERE";
            else
                where += "OR";
                
            where += " class = 'Frecuent' ";
            contClass++;
        }
        
        if ( classRecurrent )
        {
            if ( contClass == 0 )
                where += "WHERE";
            else
                where += "OR";
        
            where += " class = 'Recurrent' ";
            contClass++;
        }
        
        if ( classOcSemester )
        {
            if ( contClass == 0 )
                where += "WHERE";
            else
                where += "OR";
            
            where += " class = 'Occasional (Semester)' ";
            contClass++;
        }
        
        if ( classOcAnual )
        {
            if ( contClass == 0 )
                where += "WHERE";
            else
                where += "OR";
            
            where += " class = 'Occasional (Yearly)' ";
            contClass++;
        }
        
        if ( classBadExp )
        {
            if ( contClass == 0 )
                where += "WHERE";
            else
                where += "OR";
            
            where += " class = 'Bad Experience' ";
            contClass++;
        }
        
        if ( classNoMark )
        {
            if ( contClass == 0 )
                where += "WHERE";
            else
                where += "OR";
            
            where += " class = 'No Marketing' ";
            contClass++;
        }
        if ( classNoCover )
        {
            if ( contClass == 0 )
                where += "WHERE";
            else
                where += "OR";
            
            where += " class = 'No Coverage' ";
            contClass++;
        }
        
        if ( classInactive )
        {
            if ( contClass == 0 )
                where += "WHERE";
            else
                where += "OR";
            
            where += " class = 'Inactive' ";
        }
        
        //JOptionPane.showMessageDialog(this, "SQL = "+where);
        
        try {
            
            int cantCol;
            
            prepStat = (Statement) cnx.con.createStatement(); 
            
            tablaClientes.setModel(tablaModelo);
            
            sql = "SELECT shopifyCode, shippingPhone, name, address, address2, city, postalCode, class FROM clients "+where;
            resSet = prepStat.executeQuery(sql);
            
            rsMd = resSet.getMetaData();
            cantCol = rsMd.getColumnCount();
            
            //Asigna rotulos a la tabla
            //tablaModelo.addColumn("Id");
            tablaModelo.addColumn("SPCode");
            tablaModelo.addColumn("Phone");
            tablaModelo.addColumn("Client name");
            tablaModelo.addColumn("Address");
            tablaModelo.addColumn("Address2");
            tablaModelo.addColumn("City");
            tablaModelo.addColumn("PostalCode");
            tablaModelo.addColumn("Class");
            
            //Pone ancho de las columnas
            int [] anchoCols = {20, 60, 150, 80, 100, 100, 80, 40};
            
            for ( int j = 0; j < cantCol; j++ )
            {
                tablaClientes.getColumnModel().getColumn(j).setPreferredWidth(anchoCols[j]);
            }
            
            while ( resSet.next() )
            {
                //Crea array de objetos para obtener cada orden de la BD
                Object[] filas = new Object[cantCol];
                
                for ( int i = 0; i < cantCol; i++ )
                {
                    //Obtiene cada objeto y lo agrega al array "filas"
                    filas[i] = resSet.getObject(i + 1);
                }
                
                tablaModelo.addRow(filas);
            }
            
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }
    
    //Funcion para adicionar registros a base de datos
    public void AdicionarDatosTabla(){
        
        Statement prepStat = null;
        ResultSet resSet = null;
        ResultSetMetaData rsMd = null;
        Conexion cnx = new Conexion();
        String sql = "";
        
        //Variables para adicionar en base de datos
        String telefono = cmpTel.getText();
        String SPcode = cmpSPCode.getText();
        String cliente = cmpCliente.getText();
        String direccion = cmpDir.getText();
        String direccion2 = cmpDir2.getText();
        String ciudad = cmpCiudad.getText();
        String codigoPostal = cmpCodPostal.getText();
        String claseSeleccionada = (String)cmpClase.getSelectedItem();
        
        try {
            
            prepStat = (Statement) cnx.con.createStatement(); 
            
            sql = "INSERT INTO clients (shippingPhone, shopifyCode, name, address, address2, city, postalCode, class)"
                    + " VALUES ("
                    + "'"+telefono+"',"
                    + "'"+SPcode+"',"
                    + "'"+cliente+"',"
                    + "'"+direccion+"',"
                    + "'"+direccion2+"',"
                    + "'"+ciudad+"',"
                    + "'"+codigoPostal+"',"
                    + "'"+claseSeleccionada+"');";
            
            //System.out.println(sql);
            
            prepStat.executeUpdate(sql);
            
            JOptionPane.showMessageDialog(this, "The client has been added to database", "Base de datos", 1);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error trying to get the client from database: "+e, "Error", 0);
            System.out.println(e.toString());
        }
    }
    
    //Funcion para modificar en base de datos el registro seleccionado
    public void ModificarDatosTabla(){
        
        Statement prepStat = null;
        Conexion cnx = new Conexion();
        String sql = "";
        
        //Variables para adicionar en base de datos
        //String id = cmpId.getText();
        String telefono = cmpTel.getText();
        String cliente = cmpCliente.getText();
        String direccion = cmpDir.getText();
        String direccion2 = cmpDir2.getText();
        String ciudad = cmpCiudad.getText();
        String codigoPostal = cmpCodPostal.getText();
        String codigoSP = cmpSPCode.getText();
        String claseSeleccionada = (String)cmpClase.getSelectedItem();
        
        try {
            
            prepStat = (Statement) cnx.con.createStatement(); 
            
            sql = "UPDATE clients SET "
                    + "shippingPhone = '"+telefono+"', "
                    + "shopifyCode = '"+codigoSP+"', "
                    + "name = '"+cliente+"', "
                    + "address = '"+direccion+"', "
                    + "address2 = '"+direccion2+"', "
                    + "city = '"+ciudad+"', "
                    + "postalCode = '"+codigoPostal+"', "
                    + "class = '"+claseSeleccionada+"' "
                    + "WHERE shippingPhone = '"+telefonoAntCli+"'";
            
            //System.out.println(sql);
            
            prepStat.executeUpdate(sql);
            
            JOptionPane.showMessageDialog(this, "Client updated in database", "DataBase", 1);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error trying to update the client to database: "+e, "Error", 0);
            System.out.println(e.toString());
        }
    }
    
    //Funcion para eliminar de base de datos el registro seleccionado
    public void EliminarDatosTabla(){
        
        Statement prepStat = null;
        Conexion cnx = new Conexion();
        String sql = "";
        
        //Variables para adicionar en base de datos
        String telefono = cmpTel.getText();
        
        try {
            
            prepStat = (Statement) cnx.con.createStatement(); 
            
            sql = "DELETE FROM clients WHERE shippingPhone = '"+telefonoAntCli+"'";
            
            //System.out.println(sql);
            
            prepStat.executeUpdate(sql);
            
            JOptionPane.showMessageDialog(this, "Client has been deleted from database", "DataBase", 1);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error trying to delete the client from database: "+e, "Error", 0);
            System.out.println(e.toString());
        }
    }
    
    //Seleccionar datos de tabla para pasarlos a campos de texto del área de registro
    public void SeleccionarDatosTabla(){
        
        Statement prepStat = null;
        ResultSet resSet = null;
        Conexion cnx = new Conexion();
        String sql = "";
        int classIndex = 0;
        
        try {
            
            prepStat = (Statement) cnx.con.createStatement(); 
            
            int fila = tablaClientes.getSelectedRow();
            String shippingPhone = tablaClientes.getValueAt(fila, 1).toString();
            
            sql = "SELECT shopifyCode, shippingPhone, name, address, address2, city, postalCode, class "
                    + "FROM clients WHERE shippingPhone = '"+ shippingPhone +"'";
            resSet = prepStat.executeQuery(sql);
            
            while ( resSet.next() )
            {
                //cmpId.setText(resSet.getString("id"));
                cmpTel.setText(resSet.getString("shippingPhone"));
                cmpSPCode.setText(resSet.getString("shopifyCode"));
                cmpCliente.setText(resSet.getString("name"));
                cmpDir.setText(resSet.getString("address"));
                cmpDir2.setText(resSet.getString("address2"));
                cmpCiudad.setText(resSet.getString("city"));
                cmpCodPostal.setText(resSet.getString("postalCode"));
                
                //Guarda el telefono que tienen el cliente al momento de seleccionarlo para poder cambiarlo 
                //en base de datos, debido a que es la llave primaria
                telefonoAntCli = cmpTel.getText();
                
                if ( resSet.getString("class").equalsIgnoreCase("shopify subscriber") )
                    classIndex = 0;
                else if ( resSet.getString("class").equalsIgnoreCase("Frecuent") )
                    classIndex = 1;
                else if ( resSet.getString("class").equalsIgnoreCase("Recurrent") )
                    classIndex = 2;
                else if ( resSet.getString("class").equalsIgnoreCase("Occasional (Semester)") )
                    classIndex = 3;
                else if ( resSet.getString("class").equalsIgnoreCase("Occasional (Yearly)") )
                    classIndex = 4;
                else if ( resSet.getString("class").equalsIgnoreCase("No marketing") )
                    classIndex = 5;
                else if ( resSet.getString("class").equalsIgnoreCase("Bad experience") )
                    classIndex = 6;
                else if ( resSet.getString("class").equalsIgnoreCase("No coverage") )
                    classIndex = 7;
                else if ( resSet.getString("class").equalsIgnoreCase("Inactive") )
                    classIndex = 8;
                    
                cmpClase.setSelectedIndex(classIndex);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error trying to get the client from database: "+e);
            System.out.println(e.toString());
        }
    }
    
    
    
    public void limpiarDatos(){
        
        //Limpia campos del area de registro
        int cero = 0;
        cmpTel.setText("");
        cmpCliente.setText("");
        cmpDir.setText("");
        cmpDir2.setText("");
        cmpCiudad.setText("");
        cmpCodPostal.setText("");
        cmpSPCode.setText("");
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarOrden;
    private javax.swing.JButton btnBuscarOrden;
    private javax.swing.JButton btnEliminarOrden;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnLimpiarCampos;
    private javax.swing.JToggleButton btnRegresar;
    private javax.swing.JButton btnVerOrden;
    private javax.swing.JCheckBox checkBadExp;
    private javax.swing.JCheckBox checkFrequent;
    private javax.swing.JCheckBox checkInactive;
    private javax.swing.JCheckBox checkNoCover;
    private javax.swing.JCheckBox checkNoMark;
    private javax.swing.JCheckBox checkOcAnual;
    private javax.swing.JCheckBox checkOcSemester;
    private javax.swing.JCheckBox checkRecurrent;
    private javax.swing.JCheckBox checkSPSus;
    private javax.swing.JTextField cmpBusqueda;
    private javax.swing.JTextField cmpCiudad;
    private javax.swing.JComboBox<String> cmpClase;
    private javax.swing.JTextField cmpCliente;
    private javax.swing.JTextField cmpCodPostal;
    private javax.swing.JTextField cmpCodPostal1;
    private javax.swing.JTextField cmpDir;
    private javax.swing.JTextField cmpDir2;
    private javax.swing.JTextField cmpId;
    private javax.swing.JTextField cmpSPCode;
    private javax.swing.JTextField cmpTel;
    private javax.swing.JComboBox<String> comboBusqueda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tablaClientes;
    // End of variables declaration//GEN-END:variables
}
