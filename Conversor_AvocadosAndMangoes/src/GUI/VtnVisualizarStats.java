/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Clases.Product;
import Conexion.Conexion;
import static Conexion.Conexion.escribirArchivoHOrdersXFecha;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author johnm
 */
public class VtnVisualizarStats extends javax.swing.JFrame {
    
    private VtnMain main;
    private VtnStats stats;
    
    public VtnVisualizarStats() {
        initComponents();
        this.setLocation(100, 30);
        this.setResizable(false);
        
        //Carga de las ordenes de base de datos a la tabla de visualizacion
        CargarDatosTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProducts = new javax.swing.JTable();
        btnRegresar = new javax.swing.JToggleButton();
        txtSaleValue = new javax.swing.JTextField();
        txtExpense = new javax.swing.JTextField();
        btnCalculate = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        cmpName = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        cmpPurchaseValue = new javax.swing.JTextField();
        cmpId = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        cmpSaleValue = new javax.swing.JTextField();
        spinQuantity = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        btnVerOrden = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btnLimpiarCampos = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtPurchaseValue = new javax.swing.JTextField();
        cmpFromDate = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        cmpToDate = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("STATS");

        tablaProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Product", "Quantity", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProductsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaProducts);

        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/flecha.png"))); // NOI18N
        btnRegresar.setBorder(null);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        txtSaleValue.setEditable(false);
        txtSaleValue.setEnabled(false);

        txtExpense.setText("0.0");
        txtExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExpenseActionPerformed(evt);
            }
        });

        btnCalculate.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        btnCalculate.setText("Calculate");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Total Sale value");

        jLabel13.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText("Expense");

        jLabel14.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("TOTAL");

        lblTotal.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotal.setText("0.0");

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jLabel28.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel28.setText("Name");

        cmpName.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpNameKeyPressed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("Quantity");

        jLabel30.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("Purchase value");

        cmpPurchaseValue.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpPurchaseValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmpPurchaseValueActionPerformed(evt);
            }
        });
        cmpPurchaseValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpPurchaseValueKeyPressed(evt);
            }
        });

        cmpId.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpId.setEnabled(false);
        cmpId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmpIdActionPerformed(evt);
            }
        });
        cmpId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpIdKeyPressed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("Id");

        jLabel36.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("Sale value");

        cmpSaleValue.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpSaleValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmpSaleValueActionPerformed(evt);
            }
        });
        cmpSaleValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpSaleValueKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmpName)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel34)
                            .addComponent(cmpId, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(cmpPurchaseValue, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36)
                            .addComponent(cmpSaleValue, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(0, 1, Short.MAX_VALUE)
                                .addComponent(jLabel29))
                            .addComponent(spinQuantity))
                        .addGap(28, 28, 28)))
                .addGap(17, 17, 17))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmpName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmpId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jLabel30)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmpSaleValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmpPurchaseValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        btnVerOrden.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/lapiz_icon.png"))); // NOI18N
        btnVerOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerOrdenActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Update");

        jLabel15.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Clean");

        btnLimpiarCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/limpiar_icon.png"))); // NOI18N
        btnLimpiarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(btnVerOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLimpiarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLimpiarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel5))
                        .addGap(6, 6, 6)
                        .addComponent(btnVerOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jLabel16.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("Total Purcharse value");

        txtPurchaseValue.setEditable(false);
        txtPurchaseValue.setEnabled(false);

        cmpFromDate.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpFromDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmpFromDateActionPerformed(evt);
            }
        });
        cmpFromDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpFromDateKeyPressed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel31.setText("From date (dd/mm/aaaa)");

        jLabel32.setFont(new java.awt.Font("Bookman Old Style", 1, 12)); // NOI18N
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel32.setText("To date (dd/mm/aaaa)");

        cmpToDate.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpToDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmpToDateActionPerformed(evt);
            }
        });
        cmpToDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpToDateKeyPressed(evt);
            }
        });

        jButton1.setText("Export");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cmpFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmpToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(123, 123, 123)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(txtSaleValue, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(txtPurchaseValue, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(txtExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(btnCalculate))
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(261, 261, 261)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 855, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSaleValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtExpense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTotal)
                    .addComponent(btnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPurchaseValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmpToDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmpFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(64, 64, 64)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(465, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        stats = new VtnStats();
        irA(stats);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void tablaProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProductsMouseClicked
        //Evento al presionar doble click sobre registro de la tabla
        SeleccionarDatosTabla();
    }//GEN-LAST:event_tablaProductsMouseClicked

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
       calcularTotal();
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void cmpNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpNameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpNameKeyPressed

    private void cmpPurchaseValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmpPurchaseValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpPurchaseValueActionPerformed

    private void cmpPurchaseValueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpPurchaseValueKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpPurchaseValueKeyPressed

    private void cmpIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmpIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpIdActionPerformed

    private void cmpIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpIdKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpIdKeyPressed

    private void cmpSaleValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmpSaleValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpSaleValueActionPerformed

    private void cmpSaleValueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpSaleValueKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpSaleValueKeyPressed

    private void btnVerOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerOrdenActionPerformed
        //Modifica el registro en base de datos
        ModificarDatosTabla();
        CargarDatosTabla();
    }//GEN-LAST:event_btnVerOrdenActionPerformed

    private void btnLimpiarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarCamposActionPerformed
        limpiarDatos();
    }//GEN-LAST:event_btnLimpiarCamposActionPerformed

    private void txtExpenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExpenseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtExpenseActionPerformed

    private void cmpFromDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmpFromDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpFromDateActionPerformed

    private void cmpFromDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpFromDateKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpFromDateKeyPressed

    private void cmpToDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmpToDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpToDateActionPerformed

    private void cmpToDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpToDateKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpToDateKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String fechaDesde = "";
        String fechaHasta = "";
        String rutaArchivo = "";
        
        String dia;
        String mes;
        String annio;
        Calendar c1 = Calendar.getInstance();
        dia = Integer.toString(c1.get(Calendar.DATE));
        mes = Integer.toString(c1.get(Calendar.MONTH) + 1);
        annio = Integer.toString(c1.get(Calendar.YEAR));
        
        rutaArchivo = JOptionPane.showInputDialog(this, "Export path: ");
        
        rutaArchivo = rutaArchivo + "\\statsExp"+dia+mes+annio+".csv";
        
        Conexion.escribirArchivoEstadisticaXFecha(fechaDesde, fechaHasta, rutaArchivo, tablaProducts);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    public void irA(JFrame ventana){
        this.dispose();
        ventana.setVisible(true);
    }
    
    public void CargarDatosTabla(){
        
        DefaultTableModel tablaModelo = new DefaultTableModel();
        Statement st;
        ResultSet rs;
        Conexion cnx = new Conexion();
        Connection con;
        String sql = "";
        String where = "";
        double valorTotal = 0.0;
        double valorTotalP = 0.0;
        String totalStr;
        String totalStrP;
        
        ArrayList<Product> productos = new ArrayList<>();
        
       // productos = Conexion.llenarTablaProductos();
        try {
            
            int cantCol;
            
            tablaProducts.setModel(tablaModelo);

            //Asigna rotulos a la tabla
            tablaModelo.addColumn("Product");
            tablaModelo.addColumn("Quantity");
            tablaModelo.addColumn("SaleValue");
            tablaModelo.addColumn("PurchaseValue");
            tablaModelo.addColumn("SaleTotal");
            tablaModelo.addColumn("PurchaseTotal");
            tablaModelo.addColumn("Date");
               
            
//            if ( !cmpFromDate.getText().isEmpty() && !cmpToDate.getText().isEmpty() ){
//                where = "WHERE uploadDate = '"+cmpFromDate.getText()+"' AND ";
//            }
            
            sql = "select * from hproducts " + where;
                    
            Object O[]=null;
            int columnas = 0;
            st = (Statement) cnx.con.createStatement();
            rs = st.executeQuery(sql);

            //Where from filter fields

            while (rs.next()) {

                tablaModelo.addRow(O);
                tablaModelo.setValueAt(rs.getString("name"), columnas, 0);
                tablaModelo.setValueAt(rs.getInt("quantity"), columnas, 1);
                tablaModelo.setValueAt(rs.getDouble("saleValue"), columnas, 2);
                tablaModelo.setValueAt(rs.getDouble("purchaseValue"), columnas, 3);
                tablaModelo.setValueAt(rs.getDouble("saleValue")*rs.getInt("quantity"), columnas, 4);
                tablaModelo.setValueAt(rs.getDouble("purchaseValue")*rs.getInt("quantity"), columnas, 5);
                tablaModelo.setValueAt(rs.getString("uploadDate"), columnas, 6);

                valorTotal = valorTotal + (rs.getDouble("saleValue")*rs.getInt("quantity"));
                valorTotalP = valorTotalP + (rs.getDouble("purchaseValue")*rs.getInt("quantity"));
                columnas++;

            }

            
            cnx.con.close();
        } catch (Exception e) {
            System.out.println(e.toString());
        }
        
        //Se redondea el valor de los totales a 2 decimales
        BigDecimal bd = new BigDecimal(valorTotal).setScale(2, RoundingMode.HALF_UP);
        double val2 = bd.doubleValue();
        totalStr = ""+val2;
        
        BigDecimal bd2 = new BigDecimal(valorTotalP).setScale(2, RoundingMode.HALF_UP);
        double val1 = bd2.doubleValue();
        totalStrP = ""+val1;
      
        txtSaleValue.setText(totalStr);
        txtPurchaseValue.setText(totalStrP);
    }
    
    public void calcularTotal(){
        
        double revenue;
        double revenuePurchase;
        double total;
        double expense;
        String totalStr;
        
        revenue = Double.parseDouble(txtSaleValue.getText());
        revenuePurchase = Double.parseDouble(txtPurchaseValue.getText());
        expense = Double.parseDouble(txtExpense.getText());
        
        total = (revenue-revenuePurchase) - expense;
        //Se redondea el valor a 3 decimales
        BigDecimal bd = new BigDecimal(total).setScale(3, RoundingMode.HALF_UP);
        double val2 = bd.doubleValue();
        totalStr = ""+val2;
        
        lblTotal.setText(totalStr);
    }
    
    //Seleccionar datos de tabla para pasarlos a campos de texto del área de registro
    public void SeleccionarDatosTabla(){
        
        Statement prepStat = null;
        ResultSet resSet = null;
        Conexion cnx = new Conexion();
        String sql = "";
        int classIndex = 0;
        
        try {
            
            prepStat = (Statement) cnx.con.createStatement(); 
            
            int fila = tablaProducts.getSelectedRow();
            String name = tablaProducts.getValueAt(fila, 0).toString();
            
            sql = "SELECT id, name, purchaseValue, saleValue, quantity "
                    + "FROM hproducts WHERE name = '"+ name +"'";
            resSet = prepStat.executeQuery(sql);
            
            while ( resSet.next() )
            {
                int id = resSet.getInt("id");
                Double purchaseValue = resSet.getDouble("purchaseValue");
                Double saleValue = resSet.getDouble("saleValue");
                cmpId.setText(resSet.getString("id"));
                cmpName.setText(resSet.getString("name"));
                cmpPurchaseValue.setText(purchaseValue.toString());
                cmpSaleValue.setText(saleValue.toString());
                spinQuantity.setValue(resSet.getInt("quantity"));

            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error trying to get the product from database: "+e);
            System.out.println(e.toString());
        }
    }
    
    //Funcion para adicionar registros a base de datos
    public void AdicionarDatosTabla(){
        
        Statement prepStat = null;
        ResultSet resSet = null;
        ResultSetMetaData rsMd = null;
        Conexion cnx = new Conexion();
        String sql = "";
        
        //Variables para adicionar en base de datos
        String name = cmpName.getText();
        String purchaseValue = cmpPurchaseValue.getText();
        String saleValue = cmpSaleValue.getText();
        int quantity = (int)spinQuantity.getValue();
        
        try {
            
            prepStat = (Statement) cnx.con.createStatement(); 
            
            sql = "INSERT INTO products (name, purchaseValue, saleValue, quantity)"
                    + " VALUES ("
                    + "'"+name+"',"
                    + "'"+purchaseValue+"',"
                    + "'"+saleValue+"',"
                    + "'"+quantity+"');";
            
            //System.out.println(sql);
            
            prepStat.executeUpdate(sql);
            
            JOptionPane.showMessageDialog(this, "The product has been added to database", "Base de datos", 1);
            cnx.con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error trying to get the product from database: "+e, "Error", 0);
            System.out.println(e.toString());
        }
    }
    
    //Funcion para modificar en base de datos el registro seleccionado
    public void ModificarDatosTabla(){
        
        Statement prepStat = null;
        Conexion cnx = new Conexion();
        String sql = "";
        Product producto;
        
        //Variables para adicionar en base de datos
        String id = cmpId.getText();
        String name = cmpName.getText();
        String purchaseValue = cmpPurchaseValue.getText();
        String saleValue = cmpSaleValue.getText();
        int quantity = (int)spinQuantity.getValue();
        
        try {
            
            prepStat = (Statement) cnx.con.createStatement(); 
            
            sql = "UPDATE hproducts SET "
                    + "name = '"+name+"', "
                    + "purchaseValue = '"+purchaseValue+"', "
                    + "saleValue = '"+saleValue+"', "
                    + "quantity = '"+quantity+"' "
                    + "WHERE id = "+id+"";
            
            System.out.println(sql);
            
            prepStat.executeUpdate(sql);
            
            producto = new Product(name, 0, Double.parseDouble(purchaseValue), "");
            Conexion.actualizarProductos(producto);
            
            JOptionPane.showMessageDialog(this, "Product updated in database", "DataBase", 1);
            cnx.con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error trying to update the product to database: "+e, "Error", 0);
            System.out.println(e.toString());
        }
    }
    
    //Funcion para eliminar de base de datos el registro seleccionado
    public void EliminarDatosTabla(){
        
        Statement prepStat = null;
        Conexion cnx = new Conexion();
        String sql = "";
        
        //Variables para adicionar en base de datos
        String id = cmpId.getText();
        
        try {
            
            prepStat = (Statement) cnx.con.createStatement(); 
            
            sql = "DELETE FROM products WHERE id = '"+id+"'";
            
            //System.out.println(sql);
            
            prepStat.executeUpdate(sql);
            
            JOptionPane.showMessageDialog(this, "Product has been deleted from database", "DataBase", 1);
            
            cnx.con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error trying to delete the product from database: "+e, "Error", 0);
            System.out.println(e.toString());
        }
    }
    
    public void limpiarDatos(){
        
        //Limpia campos del area de registro
        int cero = 0;
        cmpId.setText("");
        cmpName.setText("");
        cmpPurchaseValue.setText("");
        cmpSaleValue.setText("");
        spinQuantity.setValue(0);
    }
    
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnLimpiarCampos;
    private javax.swing.JToggleButton btnRegresar;
    private javax.swing.JButton btnVerOrden;
    private javax.swing.JTextField cmpFromDate;
    private javax.swing.JTextField cmpId;
    private javax.swing.JTextField cmpName;
    private javax.swing.JTextField cmpPurchaseValue;
    private javax.swing.JTextField cmpSaleValue;
    private javax.swing.JTextField cmpToDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JSpinner spinQuantity;
    private javax.swing.JTable tablaProducts;
    private javax.swing.JTextField txtExpense;
    private javax.swing.JTextField txtPurchaseValue;
    private javax.swing.JTextField txtSaleValue;
    // End of variables declaration//GEN-END:variables
}
